{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/rts/src/props/Child.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Child = _ref => {\n  let {\n    color,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [color, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"click me \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n};\n_c = Child;\nexport const ChildAsFC = _ref2 => {\n  let {\n    color,\n    onClick\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [color, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"click me \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n_c2 = ChildAsFC;\nChildAsFC.displayName;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Child\");\n$RefreshReg$(_c2, \"ChildAsFC\");","map":{"version":3,"sources":["/Users/johnny/rts/src/props/Child.tsx"],"names":["Child","color","onClick","ChildAsFC","displayName"],"mappings":";;AAKA,OAAO,MAAMA,KAAK,GAAG,QAAkC;AAAA,MAAjC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAiC;AACrD,sBAAO;AAAA,eACJD,KADI,eAEL;AAAQ,MAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID,CALM;KAAMF,K;AAOb,OAAO,MAAMG,SAA+B,GAAG,SAAsB;AAAA,MAArB;AAACF,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAqB;AACnE,sBAAO;AAAA,eACJD,KADI,eAEL;AAAQ,MAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID,CALM;MAAMC,S;AAObA,SAAS,CAACC,WAAV","sourcesContent":["interface ChildProps {\n  color: string;\n  onClick: () =>void;\n}\n\nexport const Child = ({color, onClick}: ChildProps) => {\n  return <div>\n    {color}\n    <button onClick={onClick}>click me </button>\n    </div>;\n};\n\nexport const ChildAsFC: React.FC<ChildProps> = ({color, onClick}) => {\n  return <div>\n    {color}\n    <button onClick={onClick}>click me </button>\n    </div>\n};\n\nChildAsFC.displayName\n"]},"metadata":{},"sourceType":"module"}